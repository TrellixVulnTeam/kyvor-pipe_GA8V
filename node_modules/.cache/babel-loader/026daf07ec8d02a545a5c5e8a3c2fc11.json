{"ast":null,"code":"import _asyncToGenerator from\"/home/aravind/Desktop/DjangoProjects/djangoprojects/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/home/aravind/Desktop/DjangoProjects/djangoprojects/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/home/aravind/Desktop/DjangoProjects/djangoprojects/frontend/node_modules/@babel/runtime/regenerator/index.js\";import React,{useState,useEffect}from\"react\";import Table from\"react-bootstrap/Table\";import{Link}from\"react-router-dom\";import{toast}from\"react-toastify\";import\"react-toastify/dist/ReactToastify.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";toast.configure();var ApplicationList=function ApplicationList(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),analysis=_useState2[0],setanalysis=_useState2[1];useEffect(function(){setInterval(function(){getanalysis();},3000);},[]);var getanalysis=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,data,new_data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"http://127.0.0.1:8000/api/analysis/\");case 2:response=_context.sent;_context.next=5;return response.json();case 5:data=_context.sent;new_data=data.Response.Items;// console.log(data)\nconsole.log(new_data);setanalysis(new_data);case 9:case\"end\":return _context.stop();}}},_callee);}));return function getanalysis(){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"page-header\",children:/*#__PURE__*/_jsx(\"h3\",{className:\"page-title\",children:\"Analysis Lists \"})}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(Table,{responsive:true,children:[/*#__PURE__*/_jsx(\"thead\",{style:{backgroundColor:\"#fec107\"},children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:/*#__PURE__*/_jsx(\"strong\",{children:\"Analysis Id\"})}),/*#__PURE__*/_jsx(\"th\",{children:/*#__PURE__*/_jsx(\"strong\",{children:\"Analysis Name\"})}),/*#__PURE__*/_jsx(\"th\",{children:/*#__PURE__*/_jsx(\"strong\",{children:\"Status\"})})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:analysis.map(function(application,index){var color=application.Status===\"Incomplete\"?\"red\":application.Status===\"Running\"?\"yellow\":\"green\";return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsxs(\"td\",{children:[\" \",application.Id]}),/*#__PURE__*/_jsxs(\"td\",{children:[\" \",application.Name]}),/*#__PURE__*/_jsxs(\"td\",{style:{color:color},children:[\" \",application.Status]})]},index);})})]})]});};export default ApplicationList;","map":{"version":3,"sources":["/home/aravind/Desktop/DjangoProjects/djangoprojects/frontend/src/basespace/analysis/AnalysisList.js"],"names":["React","useState","useEffect","Table","Link","toast","configure","ApplicationList","props","analysis","setanalysis","setInterval","getanalysis","fetch","response","json","data","new_data","Response","Items","console","log","backgroundColor","map","application","index","color","Status","Id","Name"],"mappings":"ybAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,KAAP,KAAkB,uBAAlB,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,OAASC,KAAT,KAAsB,gBAAtB,CACA,MAAO,uCAAP,C,wFAEAA,KAAK,CAACC,SAAN,GACA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CACjC,cAA8BP,QAAQ,CAAC,EAAD,CAAtC,wCAAKQ,QAAL,eAAeC,WAAf,eAEAR,SAAS,CAAC,UAAM,CACdS,WAAW,CAAC,UAAY,CACtBC,WAAW,GACZ,CAFU,CAER,IAFQ,CAAX,CAGD,CAJQ,CAIN,EAJM,CAAT,CAMA,GAAIA,CAAAA,WAAW,0FAAG,oLACKC,CAAAA,KAAK,CAAC,qCAAD,CADV,QACZC,QADY,qCAECA,CAAAA,QAAQ,CAACC,IAAT,EAFD,QAEZC,IAFY,eAIZC,QAJY,CAIDD,IAAI,CAACE,QAAL,CAAcC,KAJb,CAKhB;AACAC,OAAO,CAACC,GAAR,CAAYJ,QAAZ,EACAP,WAAW,CAACO,QAAD,CAAX,CAPgB,sDAAH,kBAAXL,CAAAA,WAAW,0CAAf,CASA,mBACE,oCACE,YAAK,SAAS,CAAC,aAAf,uBACE,WAAI,SAAS,CAAC,YAAd,6BADF,EADF,cAIE,aAJF,cAKE,MAAC,KAAD,EAAO,UAAU,KAAjB,wBACE,cAAO,KAAK,CAAE,CAAEU,eAAe,CAAE,SAAnB,CAAd,uBACE,mCACE,iCACE,uCADF,EADF,cAIE,iCACE,yCADF,EAJF,cAOE,iCACE,kCADF,EAPF,GADF,EADF,cAcE,uBACGb,QAAQ,CAACc,GAAT,CAAa,SAACC,WAAD,CAAcC,KAAd,CAAwB,CACpC,GAAIC,CAAAA,KAAK,CACPF,WAAW,CAACG,MAAZ,GAAuB,YAAvB,CACI,KADJ,CAEIH,WAAW,CAACG,MAAZ,GAAuB,SAAvB,CACA,QADA,CAEA,OALN,CAMA,mBACE,mCACE,0BAAMH,WAAW,CAACI,EAAlB,GADF,cAEE,0BAAMJ,WAAW,CAACK,IAAlB,GAFF,cAGE,YAAI,KAAK,CAAE,CAAEH,KAAK,CAAEA,KAAT,CAAX,eAA+BF,WAAW,CAACG,MAA3C,GAHF,GAASF,KAAT,CADF,CAOD,CAdA,CADH,EAdF,GALF,GADF,CAwCD,CA1DD,CA4DA,cAAelB,CAAAA,eAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\ntoast.configure();\nconst ApplicationList = (props) => {\n  let [analysis, setanalysis] = useState([]);\n\n  useEffect(() => {\n    setInterval(function () {\n      getanalysis();\n    }, 3000);\n  }, []);\n\n  let getanalysis = async () => {\n    let response = await fetch(\"http://127.0.0.1:8000/api/analysis/\");\n    let data = await response.json();\n\n    let new_data = data.Response.Items;\n    // console.log(data)\n    console.log(new_data);\n    setanalysis(new_data);\n  };\n  return (\n    <div>\n      <div className=\"page-header\">\n        <h3 className=\"page-title\">Analysis Lists </h3>\n      </div>\n      <br />\n      <Table responsive>\n        <thead style={{ backgroundColor: \"#fec107\" }}>\n          <tr>\n            <th>\n              <strong>Analysis Id</strong>\n            </th>\n            <th>\n              <strong>Analysis Name</strong>\n            </th>\n            <th>\n              <strong>Status</strong>\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {analysis.map((application, index) => {\n            let color =\n              application.Status === \"Incomplete\"\n                ? \"red\"\n                : application.Status === \"Running\"\n                ? \"yellow\"\n                : \"green\";\n            return (\n              <tr key={index}>\n                <td> {application.Id}</td>\n                <td> {application.Name}</td>\n                <td style={{ color: color }}> {application.Status}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n\nexport default ApplicationList;\n"]},"metadata":{},"sourceType":"module"}