{"ast":null,"code":"import _asyncToGenerator from\"/home/aravind/Desktop/DjangoProjects/djangoprojects/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/home/aravind/Desktop/DjangoProjects/djangoprojects/frontend/node_modules/@babel/runtime/regenerator/index.js\";import axios from\"axios\";import{GET_ANALYSIS,GET_BIOSAMPLE,GET_PROJECT}from\"./types\";import{toast}from\"react-toastify\";import\"react-toastify/dist/ReactToastify.css\";toast.configure();export var getAnalysis=function getAnalysis(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(\"http://localhost:8000/api/analysis/\");case 2:res=_context.sent;dispatch({type:GET_ANALYSIS,payload:res.data});case 4:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};export var getBiosample=function getBiosample(){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var res;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return axios.get(\"http://localhost:8000/api/biosample/\");case 2:res=_context2.sent;dispatch({type:GET_BIOSAMPLE,payload:res.data});case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export var getProject=function getProject(){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var res;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return axios.get(\"http://localhost:8000/api/projects/\");case 2:res=_context3.sent;dispatch({type:GET_PROJECT,payload:res.data});case 4:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x3){return _ref3.apply(this,arguments);};}();};","map":{"version":3,"sources":["/home/aravind/Desktop/DjangoProjects/djangoprojects/frontend/src/actions/basespace.js"],"names":["axios","GET_ANALYSIS","GET_BIOSAMPLE","GET_PROJECT","toast","configure","getAnalysis","dispatch","get","res","type","payload","data","getBiosample","getProject"],"mappings":"uSAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,YAAT,CAAuBC,aAAvB,CAAsCC,WAAtC,KAAyD,SAAzD,CACA,OAASC,KAAT,KAAsB,gBAAtB,CAEA,MAAO,uCAAP,CAEAA,KAAK,CAACC,SAAN,GAEA,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,kGAAM,iBAAOC,QAAP,gJACbP,CAAAA,KAAK,CAACQ,GAAN,CAAU,qCAAV,CADa,QACzBC,GADyB,eAG/BF,QAAQ,CAAC,CACPG,IAAI,CAAET,YADC,CAEPU,OAAO,CAAEF,GAAG,CAACG,IAFN,CAAD,CAAR,CAH+B,sDAAN,gEAApB,CASP,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,mGAAM,kBAAON,QAAP,qJACdP,CAAAA,KAAK,CAACQ,GAAN,CAAU,sCAAV,CADc,QAC1BC,GAD0B,gBAGhCF,QAAQ,CAAC,CACPG,IAAI,CAAER,aADC,CAEPS,OAAO,CAAEF,GAAG,CAACG,IAFN,CAAD,CAAR,CAHgC,wDAAN,kEAArB,CASP,MAAO,IAAME,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,mGAAM,kBAAOP,QAAP,qJACZP,CAAAA,KAAK,CAACQ,GAAN,CAAU,qCAAV,CADY,QACxBC,GADwB,gBAG9BF,QAAQ,CAAC,CACPG,IAAI,CAAEP,WADC,CAEPQ,OAAO,CAAEF,GAAG,CAACG,IAFN,CAAD,CAAR,CAH8B,wDAAN,kEAAnB","sourcesContent":["import axios from \"axios\";\n\nimport { GET_ANALYSIS, GET_BIOSAMPLE, GET_PROJECT } from \"./types\";\nimport { toast } from \"react-toastify\";\n\nimport \"react-toastify/dist/ReactToastify.css\";\n\ntoast.configure();\n\nexport const getAnalysis = () => async (dispatch) => {\n  const res = await axios.get(\"http://localhost:8000/api/analysis/\");\n\n  dispatch({\n    type: GET_ANALYSIS,\n    payload: res.data,\n  });\n};\n\nexport const getBiosample = () => async (dispatch) => {\n  const res = await axios.get(\"http://localhost:8000/api/biosample/\");\n\n  dispatch({\n    type: GET_BIOSAMPLE,\n    payload: res.data,\n  });\n};\n\nexport const getProject = () => async (dispatch) => {\n  const res = await axios.get(\"http://localhost:8000/api/projects/\");\n\n  dispatch({\n    type: GET_PROJECT,\n    payload: res.data,\n  });\n};\n"]},"metadata":{},"sourceType":"module"}